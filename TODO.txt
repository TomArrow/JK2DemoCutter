lost packet count
keep date modified
dbs speed
top10 inferred (top10i)
automatically save invalid delta frame thingie
better prediction for laggy demos with gravity?
detect changes of who is spectated! (and if so add teleport flag) EF_TELEPORT_BIT
What about player state / player entity events? How to handle those? 
Obituary event makes zero sense atm... lol. Just using original clientnums that make no sense in the new demo
look at BG_EvaluateTrajectory for non player entity trajectories
and BG_PlayerStateToEntityStateExtraPolate and CG_AddToHistory for player entity trajectories
Clean up older SnapshotInfos (that are just too old to be useful, like 30+ sec?) to save RAM on long demos.
Make demos identifiable so I can avoid re-cutting them
should we properly map event entities too?
solve CROUCH when info comes from entities.
Remember or even interpolate Health/Armor when getting info from entity state? Maybe even ... infer health and such from hit info?

weapon select wheel when switching between entity and playerstate
I think this is reason for weapon select issue maybe:
if ( ps->persistant[PERS_SPAWN_COUNT] != ops->persistant[PERS_SPAWN_COUNT] ) {
		CG_Respawn();
	}
Maybe always remember last known full playerstate and copy some stuff from it...
Do a demo merger. combines multiple demos of same game...
MAYBE: detect unintentional kills? where killer wasnt looking at victim? kinda pointless tho due to bs/dbs
some way to filter out afk kills and weirdo shit in ffa
Dont keep old stuff, it makes stuff slow the bigger the files are. clear the maps regularly, e.g. kills and speeds
track highest place anyone's ever been!
track kills where killer jumped over someone else's head. and how many heads? or just. track headjumps before the kill.
detect allahu akhbar
detect mutual kills (kills each other on same frame)
detect amount of people surrounding the kill in past 5 seconds (for nice scenes with lots of ppl)
TODO: For democombiner: regarding reuse of entities for events. also make sure to update the blockedEntities array whenever a slot gets freed. Don't reuse the slot earlier. Also: Don't reserve a slot if it is currently blocked.
Also make sure that when reusing entity or player slots, event bits and such are handled properly? 
use tinfo for health/armor if available.
copy door entities. but only copy them from one demo otherwise its chaos. some way to control it...
record speed at exact time of death (bc some attacks like ydfa stop u dead in tracks and the number ends up misleading)
add option to extrapolate/predict using only gravity&velocity when demobot has cut away from kill. wont detect ground ofc, but could at least allow to salvage the scene.
find highest amount of mines at same time
MAYBE detect captures and also swoops (captures with very short hold time). could also try and detect how long it took to capture etc. find fastest capures
MAYBE current stance of victim? not important tho.
captureS: save kills/rets during run. overall fastest speed during run. kills in last 5 seconds. PARTIALLY DONE
also: get longer-span killstreaks with spans longer than 3s, but mark them as such. or rather: maybe make separate detections or sth? 3,5,7,9 seconds span. hmm. or: 3 second main but allow a bit in between?

for everything: save highest amount of consecutive lost packets?
some more info about mine kills? to recognize cool ones?
For g2 ents, maybe dont copy events?
Do KG2 for g2animents when demo ends. KINDA DONE BUT DOESNT REALLY WORK
What about dead bodies of ET_GRAPPLE?
log highest count of sentries/mines ever
detect mine boosts/backflip before kills?
Make the G2 entity part optional. Aka. If there is still a free player spot, put the player in normal. Otherwise force him into g2. But how to predict that? How to make sure the next demo that loads won't then be missing player spots? I guess we start deleting the potential g2 ones if that happens. "moving them over" if you will?
Likewise, if a player absolutely cannot fit in, make him a g2ent and throw a warning.
track percentage visible as capper?
save player counts for sprees
allow killing sprees that simply count without time by the amount of kills without dying. might be a bit lame tho.
track airtime before kill/cap?
TODO: DON'T use GetCurrentEntities in DemoDefragCombiner. In fact probably make that stuff private. Interpolation/seekahead could interfere with it. Also don't let it use the normal EndReached(). Its working through sheer luck atm.
for combiner, try median of local lows instead of global low?
detect & remember last boost & speed gain
fix yet another error with event not being copied in democombiner - that dadler kill between red pillars, flag return.
uhm ... shots from turrets? copy over
use std::lower_Bound and similar to speed up search through vectors/maps

game finding:
start with: just hashing final scoreboards (to dedupe) and recording final scores
help: "hit the capturelimit" phrase and "Intermission" PMT. Pauses are "SinglePlayerIntermission"
log players (including disconnected/renamed/reconnected ones)
log final score and each player's score details
try to resume score data of a player if he reconnects (unless impossible)
try to guess each player's position in the game in perhaps 1-minute blocks. probably too complex but eh.
try to hash each game in some way so that duplicates are found.
log times during which each player played (in both millisecond and second precision) and total play time of each player and for each section of playing, the score of that player
log pauses, their times and durations and total pause duration
log a number of total player changes during a game.


DONE: 

include cleaned up name in name parts
laugh detector: find moments with lots of laughter. or laughter sprees. where multiple people laugh a lot. or ppl say "rofl" etc in general. to find funny moments.
For trimmed cuts, include offset
close/very close enemies throughout cap. very close (within hitting distance?). or make it a number of "danger ratio" or sth idk
captures: whether it was picked up from base or from taken (bc that matters in terms of flaghold time)
For rets, save whether flag carrier was visible throughout his hold time.
Let the light demo analyzer check whether a player is ever present in the demo. If not, dont even copy as G2 ent.
attacker is flag carrier? Also for killsprees? Or nah
Also put defrag runs into database. And make them their own file. And maybe make thirdpersons their own file.
Save current speed too.
MAYBE do something about the command time-normal time delay issue? Idk what. Fixed offset? Determine from ping one time and then apply fixed value?
save whether the flag carrier was blue or red. relevant bc locations and directions
also save whether other flag was taken or on pad
maybe save current score too?
also save how long the flag hold time was at time of ret
attacker and victim teams.
IMPORTANT save kills where victim is followed!
also save whether victim was followed and make also variable "victimvisibleorfollowed"
record speed at when dbs (or other kind of attack) was initiated.
detect speed at which dbs was triggered (first frame of dbs)
in killsprees, show MODs and also main MOD (one with most kills) and also show distance between each kill
TODO: Make it overwrite kills in the database if the ones in database are third person and the new one is first person DONE (via split angles and kills)
TODO: Have it separate kill and angle. Makes more sense. To know what a demo exists of. Otherwise its just the first one that happens to be analyzed in the database. DONE
Maybe write server name/subtext and playermodels into thing as well. Thing I mean... database. DONE
add timestamp to killstreaks too DONE
save duration for killstreaks DONE
solve terminated by signal 11 on some demos HOPEFULLY SOLVED?
detect teleport KINDA DONE
demoCurrentTime happens after parsesnapshot but we add commands in parsesnapshot? FALSE ALARM I THINK, REMEMBERED WRONG
EV_PLAYER_TELEPORT_IN DONE
EV_PLAYER_TELEPORT_OUT DONE
sv_hostname in 0 and configstring 4 DONE
for combiner, try average and median of local averages.